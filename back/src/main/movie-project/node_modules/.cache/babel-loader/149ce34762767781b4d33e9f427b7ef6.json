{"ast":null,"code":"import { Cookies } from 'react-cookie';\nconst cookies = new Cookies();\nexport const setRefreshToken = refreshToken => {\n  const today = new Date();\n  const expireDate = today.setDate(today.getDate() + 30);\n  return cookies.set('refreshToken', refreshToken, {\n    expires: new Date(expireDate)\n  });\n};\nexport const setAccessToken = accessToken => {\n  const today = new Date();\n  const expireDate = today.setDate(today.getDate() + 5);\n  return cookies.set('accessToken', accessToken, {\n    expires: new Date(expireDate)\n  });\n};\nexport const getAccessToken = () => {\n  return cookies.get('accessToken');\n};\nexport const getCookieToken = () => {\n  return cookies.get('refreshToken');\n};\nexport const removeCookieToken = () => {\n  return cookies.remove('refreshToken', {\n    sameSite: 'strict',\n    path: '/'\n  });\n};","map":{"version":3,"names":["Cookies","cookies","setRefreshToken","refreshToken","today","Date","expireDate","setDate","getDate","set","expires","setAccessToken","accessToken","getAccessToken","get","getCookieToken","removeCookieToken","remove","sameSite","path"],"sources":["D:/MVP/Movie-project/back/src/main/movie-project/src/storage/Cookie.ts"],"sourcesContent":["import { Cookies } from 'react-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nexport const setRefreshToken = (refreshToken: string) => {\r\n  const today = new Date();\r\n  const expireDate = today.setDate(today.getDate() + 30);\r\n\r\n  return cookies.set('refreshToken', refreshToken, {\r\n    expires: new Date(expireDate),\r\n  });\r\n};\r\n\r\nexport const setAccessToken = (accessToken: string) => {\r\n  const today = new Date();\r\n  const expireDate = today.setDate(today.getDate() + 5);\r\n\r\n  return cookies.set('accessToken', accessToken, {\r\n    expires: new Date(expireDate),\r\n  });\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n  return cookies.get('accessToken');\r\n};\r\n\r\nexport const getCookieToken = () => {\r\n  return cookies.get('refreshToken');\r\n};\r\n\r\nexport const removeCookieToken = () => {\r\n  return cookies.remove('refreshToken', { sameSite: 'strict', path: '/' });\r\n};\r\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAc;AAEtC,MAAMC,OAAO,GAAG,IAAID,OAAO,EAAE;AAE7B,OAAO,MAAME,eAAe,GAAIC,YAAoB,IAAK;EACvD,MAAMC,KAAK,GAAG,IAAIC,IAAI,EAAE;EACxB,MAAMC,UAAU,GAAGF,KAAK,CAACG,OAAO,CAACH,KAAK,CAACI,OAAO,EAAE,GAAG,EAAE,CAAC;EAEtD,OAAOP,OAAO,CAACQ,GAAG,CAAC,cAAc,EAAEN,YAAY,EAAE;IAC/CO,OAAO,EAAE,IAAIL,IAAI,CAACC,UAAU;EAC9B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMK,cAAc,GAAIC,WAAmB,IAAK;EACrD,MAAMR,KAAK,GAAG,IAAIC,IAAI,EAAE;EACxB,MAAMC,UAAU,GAAGF,KAAK,CAACG,OAAO,CAACH,KAAK,CAACI,OAAO,EAAE,GAAG,CAAC,CAAC;EAErD,OAAOP,OAAO,CAACQ,GAAG,CAAC,aAAa,EAAEG,WAAW,EAAE;IAC7CF,OAAO,EAAE,IAAIL,IAAI,CAACC,UAAU;EAC9B,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,cAAc,GAAG,MAAM;EAClC,OAAOZ,OAAO,CAACa,GAAG,CAAC,aAAa,CAAC;AACnC,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,MAAM;EAClC,OAAOd,OAAO,CAACa,GAAG,CAAC,cAAc,CAAC;AACpC,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG,MAAM;EACrC,OAAOf,OAAO,CAACgB,MAAM,CAAC,cAAc,EAAE;IAAEC,QAAQ,EAAE,QAAQ;IAAEC,IAAI,EAAE;EAAI,CAAC,CAAC;AAC1E,CAAC"},"metadata":{},"sourceType":"module"}